---
- name: Install docker requisites
  apt: 
    name: '{{ item }}'
    state: present
  with_items:
    - apt-transport-https
    - ca-certificates
    - software-properties-common

- name: Add Docker repo key
  apt_key: url="https://download.docker.com/linux/debian/gpg"
  ignore_errors: yes
  register: add_docker_repo

- name: Add Docker repo key
  shell: curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -qq - >/dev/null
  when: add_docker_repo|failed

- name: Add docker repo
  apt_repository: repo='deb https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable' state=present update_cache=yes
  when: ansible_distribution != "Ubuntu"

- name: Add docker repo
  apt_repository: repo='deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ansible_distribution_release}} stable' state=present update_cache=yes
  when: ansible_distribution == "Ubuntu"

- name: Install docker
  apt: name="docker-ce=17.03.2~ce-0~ubuntu-{{ ansible_distribution_release }}" state=installed force=yes
  when: ansible_distribution == "Ubuntu"

- name: Add repo key
  apt_key:
    url: "https://packages.cloud.google.com/apt/doc/apt-key.gpg"
    state: present

- name: add kubernetes key
  apt_key:
    id: '{{ kubernetes_apt_key_id }}'
    url: 'https://packages.cloud.google.com/apt/doc/apt-key.gpg'
    state: present

- name: kubernetes repo
  apt_repository:
    repo: 'deb http://apt.kubernetes.io/ kubernetes-xenial main'
    state: present

- name: install kubernetes
  apt:
    name: '{{ item }}'
    state: present
  with_items:
    - kubelet
    - kubectl
    - kubeadm
    - kubernetes-cni

- name: Up kubernetes
  shell: kubeadm init --pod-network-cidr="{{ k8s_network }}"

- name: Bridge enable
  shell: sysctl net.bridge.bridge-nf-call-iptables=1

- name: K8S config
  shell: |
    export KUBECONFIG=/etc/kubernetes/admin.conf
    kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/v0.9.1/Documentation/kube-flannel.yml
    kubectl taint nodes --all node-role.kubernetes.io/master-

